name: AWS-Infrastructure

on:
  push:
    branches:
      - tshego/feat/infrastucture

env:
  AWS_REGION: "eu-west-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
    ConfigureAwsAndTerraform:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: aws-actions/configure-aws-credentials@v4
              with:
                    aws-region: ${{ env.AWS_REGION }}
                    aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                    audience: sts.amazonaws.com

            - uses: hashicorp/setup-terraform@v3
            - name: Terraform Init
              working-directory: ./Infrastructure
              run: terraform init

            - uses: hashicorp/setup-terraform@v3
            - name: Terraform Plan
              id: plan
              working-directory: ./Infrastructure
              run: terraform plan

            - uses: hashicorp/setup-terraform@v3
            - name: Terraform Apply
              working-directory: ./Infrastructure
              run: terraform apply -auto-approve


    FlywayMigration:
        name: Run Flyway Migration
        needs: ConfigureAwsAndTerraform
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3.0.0
            - name: Continuous Integration Flyway Clean Migrate
              run: >-
                docker run --rm
                --volume ${{ github.workspace }}/Database/migrations:/flyway/sql:ro
                redgate/flyway
                -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
                -url="${{ secrets.DB_URL }}"
                -user="${{ secrets.DB_USERNAME }}"
                -password="${{ secrets.DB_PASSWORD }}" migrate