name: AWS-Infrastructure

on:
  push:
    branches:
      - tshego/feat/deployments

env:
  AWS_REGION: "eu-west-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
    ConfigureAwsAndTerraform:
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: infrastructure
        steps:
            - name: Check out code
              uses: actions/checkout@v2

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                    aws-region: ${{ env.AWS_REGION }}
                    aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                    audience: sts.amazonaws.com

            - name: Check out terraform
              uses: hashicorp/setup-terraform@v3
 
            - name: Terraform Init
              run: terraform init

            - name: Terraform Plan
              id: plan
              run: terraform plan

            - name: Terraform Apply
              run: terraform apply -auto-approve


    FlywayMigration:
        name: Run Flyway Migration
        needs: ConfigureAwsAndTerraform
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3.0.0
            - name: Continuous Integration Flyway Clean Migrate
              run: >-
                docker run --rm
                --volume ${{ github.workspace }}/Databases/migrations:/flyway/sql:ro
                redgate/flyway
                -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
                -url="${{ secrets.DB_URL }}"
                -user="${{ secrets.DB_USERNAME }}"
                -password="${{ secrets.DB_PASSWORD }}" migrate

    ServerBuild:
      needs: ConfigureAwsAndTerraform
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: wechat-server
      steps:
        - uses: actions/checkout@v4
        - name: Setup Java JDK
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '21'
  
        - name: Run sed command to update backend credentials
          run: |
            sed -i 's@^spring.datasource.url.*@spring.datasource.url=${{ secrets.DB_URL }}@' src/main/resources/application.properties
            sed -i 's@^spring.datasource.username.*@spring.datasource.username=${{ secrets.DB_USERNAME }}@' src/main/resources/application.properties
            sed -i 's@^spring.datasource.password.*@spring.datasource.password=${{ secrets.DB_PASSWORD }}@' src/main/resources/application.properties
  
        - name: Build with Maven
          run: mvn -B package -DskipTests -f pom.xml
        
        - name: Upload Maven Artifact
          uses: actions/upload-artifact@v3
          with:
            name: BeansWechat_Artifacts
            path: target/wechat-1.0-SNAPSHOT.jar
  
    ServerDeployment:
      needs: ServerBuild
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: wechat-server
      steps:
        - uses: actions/checkout@v4
  
        - name: Download Artifacts
          uses: actions/download-artifact@v3
          with:
            name: BeansWechat_Artifacts
  
        - name: Deploy to EB
          uses: einaregilsson/beanstalk-deploy@v21
          with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            application_name: beans-wechat-application
            environment_name: beans-wechat-elastic-beanstalk-env
            version_label: ${{ github.run_number }}
            region: ${{ env.AWS_REGION }}
            deployment_package: wechat-1.0-SNAPSHOT.jar